{"version":3,"sources":["components/Feedback.module.css","components/feedback/FeedbackOption.js","components/Statistics/Statistics.js","components/Statistics/Notification.js","components/Section.js","App.js","index.js"],"names":["module","exports","FeedbackOption","onIncreventGood","onIncreventNeutral","onIncreventBad","className","type","styles","good","onClick","neutral","bad","Statistics","total","positivePercentage","statistics","data","Notification","message","notification","Section","title","children","section","App","state","props","initialValue","handleIncrementGood","setState","prevState","handleIncrementNeutral","handleIncrementBad","countTotalFeedback","countPositiveFeedbackPercentage","positiveFeedback","Math","round","this","container","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91c3d19c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Feedback_container__1AbgQ\",\"section\":\"Feedback_section__2GDV_\",\"title\":\"Feedback_title__3_A5r\",\"notification\":\"Feedback_notification__1w53-\",\"button\":\"Feedback_button__2Bs6y\",\"good\":\"Feedback_good__1QyWE Feedback_button__2Bs6y\",\"neutral\":\"Feedback_neutral__2P3uL Feedback_button__2Bs6y\",\"bad\":\"Feedback_bad__biJyU Feedback_button__2Bs6y\",\"statistics\":\"Feedback_statistics__ReZMD\",\"data\":\"Feedback_data__1nvjS\"};","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport styles from'../Feedback.module.css'\r\n\r\n\r\nconst FeedbackOption = ({onIncreventGood, onIncreventNeutral, onIncreventBad}) => (\r\n  \r\n    <div className=\"feedback-options\">\r\n        <button type=\"button\" className={styles.good} onClick = {onIncreventGood}>Good</button>\r\n        <button type=\"button\" className={styles.neutral} onClick = {onIncreventNeutral}>Neutral</button>\r\n        <button type=\"button\" className={styles.bad} onClick = { onIncreventBad}>Bad</button>\r\n    </div> \r\n)\r\n\r\nFeedbackOption.propTypes = {\r\n    onIncreventGood: PropTypes.func.isRequired,\r\n    onIncreventNeutral: PropTypes.func.isRequired,\r\n    onIncreventBad: PropTypes.func.isRequired,\r\n  \r\n}\r\n\r\n\r\nexport default FeedbackOption;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport styles from'../Feedback.module.css'\r\n\r\nconst Statistics = ({good, neutral, bad, total, positivePercentage}) => (\r\n    <ul className={styles.statistics}>\r\n        <li><span className={styles.data}>Neutral: </span>{neutral}</li>\r\n        <li><span className={styles.data}>Bad: </span>{bad}</li>\r\n        <li><span className={styles.data}>Total: </span>{total}</li>\r\n        <li><span className={styles.data}>Good: </span>{good}</li>\r\n        <li><span className={styles.data}>Positive feedback: </span>{positivePercentage}%</li>\r\n    </ul>\r\n)\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n \r\n}\r\n    \r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport styles from'../Feedback.module.css'\r\n\r\nconst Notification = ({message}) =><p className={styles.notification}>{message}</p>\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,    \r\n}\r\n\r\nexport default Notification","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport styles from'./Feedback.module.css'\r\n\r\n\r\n\r\nconst Section =({title, children}) => \r\n    <div className = {styles.section}>\r\n        <p className={styles.title}>{title}</p>\r\n        {children}\r\n    </div>\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Section","import React, {Component} from 'react';\nimport PropTypes from 'prop-types'\n\nimport FeedbackOption from './components/feedback'\nimport Statistics from './components/Statistics'\nimport Notification from './components/Statistics/Notification'\nimport Section from './components/Section'\n\nimport styles from'./components/Feedback.module.css'\n\n\nclass App extends Component {\n  static defaultProps = {\n      initialValue: 0,\n  }\n\n  static propTypes = {\n    initialValue: PropTypes.number,\n  }\n\n  state = {\n      good: this.props.initialValue,\n      neutral: this.props.initialValue,\n      bad: this.props.initialValue\n  }\n\n  handleIncrementGood = () => {\n    this.setState((prevState)=>({           \n            good: prevState.good+1,        \n    }))\n  }\n\n  handleIncrementNeutral = () => {\n    this.setState((prevState)=>({           \n            neutral: prevState.neutral+1,        \n    }))\n  }\n\n  handleIncrementBad = () => {\n    this.setState((prevState)=>({           \n            bad: prevState.bad+1,        \n    }))\n  }\n\n  countTotalFeedback = () => this.state.good + this.state.neutral + this.state.bad;\n\n  countPositiveFeedbackPercentage = () => {\n    let positiveFeedback = 0;\n    if (this.state.good>0) {\n        positiveFeedback = Math.round((this.state.good/this.countTotalFeedback())*100);\n    }\n    return positiveFeedback;\n  }\n\n  render() {\n    const {good, neutral, bad} = this.state;\n    \n    return (\n      <section className={styles.container}>\n        <Section title=\"Please, leave feedback\">\n          <FeedbackOption \n            onIncreventGood={this.handleIncrementGood}\n            onIncreventNeutral={this.handleIncrementNeutral}\n            onIncreventBad={this.handleIncrementBad}\n          // options={0} \n          // onLeaveFeedback={0}\n          />\n        </Section>\n        \n        <Section title=\"Statistics\">        \n          {this.countTotalFeedback()===0 \n          ? \n            <Notification message=\"No feedback given\"/>\n          :        \n            <Statistics \n              good={good} \n              neutral={neutral} \n              bad={bad} \n              total={this.countTotalFeedback()} \n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />        \n          }\n        </Section>\n      </section>\n    )\n  }\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App initialValue ={0}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}